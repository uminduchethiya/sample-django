name: Django CI & FTP Deploy - sampleauthapp
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Django Tests
        run: python manage.py test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      
      - name: Prepare files for deployment
        run: |
          # Remove files that shouldn't be deployed
          find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name "*.pyc" -delete 2>/dev/null || true
          rm -rf .git .github venv .gitignore 2>/dev/null || true
          ls -la  # Show what files will be deployed
      
      # Option 1: Try with lftp (most reliable for shared hosting)
      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp
        
      - name: Deploy via lftp
        run: |
          lftp -c "
            set ftp:ssl-allow no;
            set ftp:passive-mode yes;
            set net:timeout 10;
            set net:max-retries 2;
            set net:reconnect-interval-base 5;
            set ftp:sync-mode off;
            open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_SERVER }};
            mirror -R --delete --parallel=1 --exclude-glob='*.git*' --exclude-glob='*__pycache__*' . ./;
            bye
          "
